{"ast":null,"code":"import { HighContrastSelector, focusClear, getGlobalClassNames, ZIndexes } from '../../Styling';\nfunction getBeakStyle(beakWidth) {\n  return {\n    height: beakWidth,\n    width: beakWidth\n  };\n}\nvar GlobalClassNames = {\n  container: 'ms-Callout-container',\n  root: 'ms-Callout',\n  beak: 'ms-Callout-beak',\n  beakCurtain: 'ms-Callout-beakCurtain',\n  calloutMain: 'ms-Callout-main'\n};\nexport var getStyles = function (props) {\n  var _a;\n  var theme = props.theme,\n    className = props.className,\n    overflowYHidden = props.overflowYHidden,\n    calloutWidth = props.calloutWidth,\n    beakWidth = props.beakWidth,\n    backgroundColor = props.backgroundColor,\n    calloutMaxWidth = props.calloutMaxWidth,\n    calloutMinWidth = props.calloutMinWidth,\n    doNotLayer = props.doNotLayer;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var semanticColors = theme.semanticColors,\n    effects = theme.effects;\n  return {\n    container: [classNames.container, {\n      position: 'relative'\n    }],\n    root: [classNames.root, theme.fonts.medium, {\n      position: 'absolute',\n      display: 'flex',\n      zIndex: doNotLayer ? ZIndexes.Layer : undefined,\n      boxSizing: 'border-box',\n      borderRadius: effects.roundedCorner2,\n      boxShadow: effects.elevation16,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: 'WindowText'\n      }, _a)\n    }, focusClear(), className, !!calloutWidth && {\n      width: calloutWidth\n    }, !!calloutMaxWidth && {\n      maxWidth: calloutMaxWidth\n    }, !!calloutMinWidth && {\n      minWidth: calloutMinWidth\n    }],\n    beak: [classNames.beak, {\n      position: 'absolute',\n      backgroundColor: semanticColors.menuBackground,\n      boxShadow: 'inherit',\n      border: 'inherit',\n      boxSizing: 'border-box',\n      transform: 'rotate(45deg)'\n    }, getBeakStyle(beakWidth), backgroundColor && {\n      backgroundColor: backgroundColor\n    }],\n    beakCurtain: [classNames.beakCurtain, {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      backgroundColor: semanticColors.menuBackground,\n      borderRadius: effects.roundedCorner2\n    }],\n    calloutMain: [classNames.calloutMain, {\n      backgroundColor: semanticColors.menuBackground,\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      position: 'relative',\n      width: '100%',\n      borderRadius: effects.roundedCorner2\n    }, overflowYHidden && {\n      overflowY: 'hidden'\n    }, backgroundColor && {\n      backgroundColor: backgroundColor\n    }]\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,oBAAoB,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,QAAQ,QAAQ,eAAe;AAI/F,SAASC,YAAY,CAACC,SAAkB;EACtC,OAAO;IACLC,MAAM,EAAED,SAAS;IACjBE,KAAK,EAAEF;GACR;AACH;AAEA,IAAMG,gBAAgB,GAAG;EACvBC,SAAS,EAAE,sBAAsB;EACjCC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,wBAAwB;EACrCC,WAAW,EAAE;CACd;AAED,OAAO,IAAMC,SAAS,GAAG,UAACC,KAAgC;;EAEtD,SAAK,GASHA,KAAK,MATF;IACLC,SAAS,GAQPD,KAAK,UARE;IACTE,eAAe,GAObF,KAAK,gBAPQ;IACfG,YAAY,GAMVH,KAAK,aANK;IACZV,SAAS,GAKPU,KAAK,UALE;IACTI,eAAe,GAIbJ,KAAK,gBAJQ;IACfK,eAAe,GAGbL,KAAK,gBAHQ;IACfM,eAAe,GAEbN,KAAK,gBAFQ;IACfO,UAAU,GACRP,KAAK,WADG;EAGZ,IAAMQ,UAAU,GAAGrB,mBAAmB,CAACM,gBAAgB,EAAEgB,KAAK,CAAC;EAEvD,kBAAc,GAAcA,KAAK,eAAnB;IAAEC,OAAO,GAAKD,KAAK,QAAV;EAE/B,OAAO;IACLf,SAAS,EAAE,CACTc,UAAU,CAACd,SAAS,EACpB;MACEiB,QAAQ,EAAE;KACX,CACF;IACDhB,IAAI,EAAE,CACJa,UAAU,CAACb,IAAI,EACfc,KAAK,CAACG,KAAK,CAACC,MAAM,EAClB;MACEF,QAAQ,EAAE,UAAU;MACpBG,OAAO,EAAE,MAAM;MACfC,MAAM,EAAER,UAAU,GAAGnB,QAAQ,CAAC4B,KAAK,GAAGC,SAAS;MAC/CC,SAAS,EAAE,YAAY;MACvBC,YAAY,EAAET,OAAO,CAACU,cAAc;MACpCC,SAAS,EAAEX,OAAO,CAACY,WAAW;MAC9BC,SAAS,YACPC,GAACvC,oBAAoB,IAAG;QACtBwC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE,OAAO;QACpBC,WAAW,EAAE;OACd;KAEJ,EACDzC,UAAU,EAAE,EACZe,SAAS,EACT,CAAC,CAACE,YAAY,IAAI;MAAEX,KAAK,EAAEW;IAAY,CAAE,EACzC,CAAC,CAACE,eAAe,IAAI;MAAEuB,QAAQ,EAAEvB;IAAe,CAAE,EAClD,CAAC,CAACC,eAAe,IAAI;MAAEuB,QAAQ,EAAEvB;IAAe,CAAE,CACnD;IACDV,IAAI,EAAE,CACJY,UAAU,CAACZ,IAAI,EACf;MACEe,QAAQ,EAAE,UAAU;MACpBP,eAAe,EAAE0B,cAAc,CAACC,cAAc;MAC9CV,SAAS,EAAE,SAAS;MACpBW,MAAM,EAAE,SAAS;MACjBd,SAAS,EAAE,YAAY;MACvBe,SAAS,EAAE;KACZ,EACD5C,YAAY,CAACC,SAAS,CAAC,EACvBc,eAAe,IAAI;MACjBA,eAAe,EAAEA;KAClB,CACF;IACDP,WAAW,EAAE,CACXW,UAAU,CAACX,WAAW,EACtB;MACEc,QAAQ,EAAE,UAAU;MACpBuB,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,CAAC;MACPjC,eAAe,EAAE0B,cAAc,CAACC,cAAc;MAC9CZ,YAAY,EAAET,OAAO,CAACU;KACvB,CACF;IACDtB,WAAW,EAAE,CACXU,UAAU,CAACV,WAAW,EACtB;MACEM,eAAe,EAAE0B,cAAc,CAACC,cAAc;MAC9CO,SAAS,EAAE,QAAQ;MACnBC,SAAS,EAAE,MAAM;MACjB5B,QAAQ,EAAE,UAAU;MACpBnB,KAAK,EAAE,MAAM;MACb2B,YAAY,EAAET,OAAO,CAACU;KACvB,EACDlB,eAAe,IAAI;MACjBqC,SAAS,EAAE;KACZ,EACDnC,eAAe,IAAI;MACjBA,eAAe,EAAEA;KAClB;GAEJ;AACH,CAAC","names":["HighContrastSelector","focusClear","getGlobalClassNames","ZIndexes","getBeakStyle","beakWidth","height","width","GlobalClassNames","container","root","beak","beakCurtain","calloutMain","getStyles","props","className","overflowYHidden","calloutWidth","backgroundColor","calloutMaxWidth","calloutMinWidth","doNotLayer","classNames","theme","effects","position","fonts","medium","display","zIndex","Layer","undefined","boxSizing","borderRadius","roundedCorner2","boxShadow","elevation16","selectors","_a","borderWidth","borderStyle","borderColor","maxWidth","minWidth","semanticColors","menuBackground","border","transform","top","right","bottom","left","overflowX","overflowY"],"sources":["C:\\Users\\hpryz\\Documents\\_Programming\\web-project\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Callout\\CalloutContent.styles.ts"],"sourcesContent":["import { HighContrastSelector, focusClear, getGlobalClassNames, ZIndexes } from '../../Styling';\nimport type { IRawStyle } from '../../Styling';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\n\nfunction getBeakStyle(beakWidth?: number): IRawStyle {\n  return {\n    height: beakWidth,\n    width: beakWidth,\n  };\n}\n\nconst GlobalClassNames = {\n  container: 'ms-Callout-container',\n  root: 'ms-Callout',\n  beak: 'ms-Callout-beak',\n  beakCurtain: 'ms-Callout-beakCurtain',\n  calloutMain: 'ms-Callout-main',\n};\n\nexport const getStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  const {\n    theme,\n    className,\n    overflowYHidden,\n    calloutWidth,\n    beakWidth,\n    backgroundColor,\n    calloutMaxWidth,\n    calloutMinWidth,\n    doNotLayer,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { semanticColors, effects } = theme;\n\n  return {\n    container: [\n      classNames.container,\n      {\n        position: 'relative',\n      },\n    ],\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'absolute',\n        display: 'flex',\n        zIndex: doNotLayer ? ZIndexes.Layer : undefined,\n        boxSizing: 'border-box',\n        borderRadius: effects.roundedCorner2,\n        boxShadow: effects.elevation16,\n        selectors: {\n          [HighContrastSelector]: {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'WindowText',\n          },\n        },\n      },\n      focusClear(),\n      className,\n      !!calloutWidth && { width: calloutWidth },\n      !!calloutMaxWidth && { maxWidth: calloutMaxWidth },\n      !!calloutMinWidth && { minWidth: calloutMinWidth },\n    ],\n    beak: [\n      classNames.beak,\n      {\n        position: 'absolute',\n        backgroundColor: semanticColors.menuBackground,\n        boxShadow: 'inherit',\n        border: 'inherit',\n        boxSizing: 'border-box',\n        transform: 'rotate(45deg)',\n      },\n      getBeakStyle(beakWidth),\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n    beakCurtain: [\n      classNames.beakCurtain,\n      {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        backgroundColor: semanticColors.menuBackground,\n        borderRadius: effects.roundedCorner2,\n      },\n    ],\n    calloutMain: [\n      classNames.calloutMain,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        position: 'relative',\n        width: '100%',\n        borderRadius: effects.roundedCorner2,\n      },\n      overflowYHidden && {\n        overflowY: 'hidden',\n      },\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}