{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET } from '../../utilities/keytips/index';\nimport { useKeytipData } from './useKeytipData';\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport var KeytipData = function (props) {\n  var _a;\n  var children = props.children,\n    keytipDataProps = __rest(props, [\"children\"]);\n  var _b = useKeytipData(keytipDataProps),\n    keytipId = _b.keytipId,\n    ariaDescribedBy = _b.ariaDescribedBy;\n  return children((_a = {}, _a[DATAKTP_TARGET] = keytipId, _a[DATAKTP_EXECUTE_TARGET] = keytipId, _a['aria-describedby'] = ariaDescribedBy, _a));\n};","map":{"version":3,"mappings":";AACA,SAASA,cAAc,EAAEC,sBAAsB,QAAQ,+BAA+B;AACtF,SAASC,aAAa,QAAQ,iBAAiB;AAI/C;;;;AAIA,OAAO,IAAMC,UAAU,GAAqE,eAAK;;EACvF,YAAQ,GAAyBC,KAAK,SAA9B;IAAKC,eAAe,UAAKD,KAAK,EAAxC,YAAgC,CAAF;EAC9B,SAAgCF,aAAa,CAACG,eAAe,CAAC;IAA5DC,QAAQ;IAAEC,eAAe,qBAAmC;EAEpE,OAAOC,QAAQ,WACbC,GAACT,cAAc,IAAGM,QAAQ,EAC1BG,GAACR,sBAAsB,IAAGK,QAAQ,EAClCG,sBAAkB,GAAEF,eAAe,MACnC;AACJ,CAAC","names":["DATAKTP_TARGET","DATAKTP_EXECUTE_TARGET","useKeytipData","KeytipData","props","keytipDataProps","keytipId","ariaDescribedBy","children","_a"],"sources":["C:\\Users\\hpryz\\Documents\\_Programming\\web-project\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\KeytipData\\KeytipData.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET } from '../../utilities/keytips/index';\nimport { useKeytipData } from './useKeytipData';\nimport type { IRenderComponent } from '../../Utilities';\nimport type { IKeytipDataProps } from './KeytipData.types';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport const KeytipData: React.FunctionComponent<IKeytipDataProps & IRenderComponent<{}>> = props => {\n  const { children, ...keytipDataProps } = props;\n  const { keytipId, ariaDescribedBy } = useKeytipData(keytipDataProps);\n\n  return children({\n    [DATAKTP_TARGET]: keytipId,\n    [DATAKTP_EXECUTE_TARGET]: keytipId,\n    'aria-describedby': ariaDescribedBy,\n  });\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}