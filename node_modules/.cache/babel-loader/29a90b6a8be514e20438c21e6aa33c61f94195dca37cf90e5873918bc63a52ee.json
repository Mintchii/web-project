{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useUnmount } from '@fluentui/react-hooks';\nimport { css, getId } from '../../Utilities';\nimport { notifyHostChanged, registerLayerHost, unregisterLayerHost } from './Layer.notification';\nexport var LayerHost = function (props) {\n  var className = props.className;\n  var layerHostId = React.useState(function () {\n    return getId();\n  })[0];\n  var _a = props.id,\n    hostId = _a === void 0 ? layerHostId : _a;\n  var layerHostRef = React.useRef({\n    hostId: hostId,\n    rootRef: React.useRef(null),\n    notifyLayersChanged: function () {\n      // Nothing, since the default implementation of Layer Host does not need to react to layer changes.\n    }\n  });\n  React.useImperativeHandle(props.componentRef, function () {\n    return layerHostRef.current;\n  });\n  React.useEffect(function () {\n    registerLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n  useUnmount(function () {\n    unregisterLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n  });\n  return React.createElement(\"div\", __assign({}, props, {\n    className: css('ms-LayerHost', className),\n    ref: layerHostRef.current.rootRef\n  }));\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAC5C,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,sBAAsB;AAGhG,OAAO,IAAMC,SAAS,GAA6C,eAAK;EAC9D,aAAS,GAAKC,KAAK,UAAV;EAEV,eAAW,GAAIR,KAAK,CAACS,QAAQ,CAAC;IAAM,YAAK,EAAE;EAAP,CAAO,CAAC,GAAjC;EAEV,SAA6BD,KAAK,GAAV;IAApBE,MAAM,mBAAGC,WAAW;EAEhC,IAAMC,YAAY,GAAGZ,KAAK,CAACa,MAAM,CAAa;IAC5CH,MAAM;IACNI,OAAO,EAAEd,KAAK,CAACa,MAAM,CAAwB,IAAI,CAAC;IAClDE,mBAAmB,EAAE;MACnB;IAAA;GAEH,CAAC;EAEFf,KAAK,CAACgB,mBAAmB,CAACR,KAAK,CAACS,YAAY,EAAE;IAAM,mBAAY,CAACC,OAAO;EAApB,CAAoB,CAAC;EAEzElB,KAAK,CAACmB,SAAS,CAAC;IACdd,iBAAiB,CAACK,MAAM,EAAEE,YAAY,CAACM,OAAO,CAAC;IAC/Cd,iBAAiB,CAACM,MAAM,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAENT,UAAU,CAAC;IACTK,mBAAmB,CAACI,MAAM,EAAEE,YAAY,CAACM,OAAO,CAAC;IACjDd,iBAAiB,CAACM,MAAM,CAAC;EAC3B,CAAC,CAAC;EAEF,OAAOV,wCAASQ,KAAK;IAAEY,SAAS,EAAElB,GAAG,CAAC,cAAc,EAAEkB,SAAS,CAAC;IAAEC,GAAG,EAAET,YAAY,CAACM,OAAO,CAACJ;EAAO,GAAI;AACzG,CAAC","names":["React","useUnmount","css","getId","notifyHostChanged","registerLayerHost","unregisterLayerHost","LayerHost","props","useState","hostId","layerHostId","layerHostRef","useRef","rootRef","notifyLayersChanged","useImperativeHandle","componentRef","current","useEffect","className","ref"],"sources":["C:\\Users\\hpryz\\Documents\\_Programming\\web-project\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Layer\\LayerHost.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useUnmount } from '@fluentui/react-hooks';\nimport { css, getId } from '../../Utilities';\nimport { notifyHostChanged, registerLayerHost, unregisterLayerHost } from './Layer.notification';\nimport type { ILayerHost, ILayerHostProps } from './LayerHost.types';\n\nexport const LayerHost: React.FunctionComponent<ILayerHostProps> = props => {\n  const { className } = props;\n\n  const [layerHostId] = React.useState(() => getId());\n\n  const { id: hostId = layerHostId } = props;\n\n  const layerHostRef = React.useRef<ILayerHost>({\n    hostId,\n    rootRef: React.useRef<HTMLDivElement | null>(null),\n    notifyLayersChanged: () => {\n      // Nothing, since the default implementation of Layer Host does not need to react to layer changes.\n    },\n  });\n\n  React.useImperativeHandle(props.componentRef, () => layerHostRef.current);\n\n  React.useEffect(() => {\n    registerLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useUnmount(() => {\n    unregisterLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n  });\n\n  return <div {...props} className={css('ms-LayerHost', className)} ref={layerHostRef.current.rootRef} />;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}