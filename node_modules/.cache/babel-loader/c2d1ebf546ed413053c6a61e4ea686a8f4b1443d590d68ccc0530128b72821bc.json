{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { concatStyleSets, getFocusStyle, HighContrastSelector, getScreenSelector, ScreenWidthMaxMedium, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nexport var CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getMenuItemStyles = memoizeFunction(function (theme) {\n  var _a, _b, _c, _d, _e;\n  var semanticColors = theme.semanticColors,\n    fonts = theme.fonts,\n    palette = theme.palette;\n  var ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n  var ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n  var ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n  var ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n  var menuItemStyles = {\n    item: [fonts.medium, {\n      color: semanticColors.bodyText,\n      position: 'relative',\n      boxSizing: 'border-box'\n    }],\n    divider: {\n      display: 'block',\n      height: '1px',\n      backgroundColor: ContextualMenuItemDividerColor,\n      position: 'relative'\n    },\n    root: [getFocusStyle(theme), fonts.medium, {\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      border: 'none',\n      width: '100%',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      display: 'block',\n      cursor: 'pointer',\n      padding: '0px 8px 0 4px',\n      textAlign: 'left'\n    }],\n    rootDisabled: {\n      color: semanticColors.disabledBodyText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        // ensure disabled text looks different than enabled\n        color: 'GrayText',\n        opacity: 1\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: ContextualMenuItemBackgroundHoverColor,\n      color: ContextualMenuItemTextHoverColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDarkAlt\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootFocused: {\n      backgroundColor: palette.white\n    },\n    rootChecked: {\n      selectors: {\n        '.ms-ContextualMenu-checkmarkIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootPressed: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDark\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootExpanded: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      color: semanticColors.bodyTextChecked,\n      selectors: (_b = {\n        '.ms-ContextualMenu-submenuIcon': (_c = {}, _c[HighContrastSelector] = {\n          // icons inside of anchor tags are not properly inheriting color in high contrast\n          color: 'inherit'\n        }, _c)\n      }, _b[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()), _b)\n    },\n    linkContent: {\n      whiteSpace: 'nowrap',\n      height: 'inherit',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '100%'\n    },\n    anchorLink: {\n      padding: '0px 8px 0 4px',\n      textRendering: 'auto',\n      color: 'inherit',\n      letterSpacing: 'normal',\n      wordSpacing: 'normal',\n      textTransform: 'none',\n      textIndent: '0px',\n      textShadow: 'none',\n      textDecoration: 'none',\n      boxSizing: 'border-box'\n    },\n    label: {\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      display: 'inline-block',\n      flexGrow: '1',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    secondaryText: {\n      color: theme.palette.neutralSecondary,\n      paddingLeft: '20px',\n      textAlign: 'right'\n    },\n    icon: {\n      display: 'inline-block',\n      minHeight: '1px',\n      maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      fontSize: IconFontSizes.medium,\n      width: IconFontSizes.medium,\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      selectors: (_d = {}, _d[MediumScreenSelector] = {\n        fontSize: IconFontSizes.large,\n        width: IconFontSizes.large\n      }, _d)\n    },\n    iconColor: {\n      color: semanticColors.menuIcon\n    },\n    iconDisabled: {\n      color: semanticColors.disabledBodyText\n    },\n    checkmarkIcon: {\n      color: semanticColors.bodySubtext\n    },\n    subMenuIcon: {\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      color: palette.neutralSecondary,\n      textAlign: 'center',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      fontSize: IconFontSizes.small,\n      selectors: (_e = {\n        ':hover': {\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.neutralPrimary\n        }\n      }, _e[MediumScreenSelector] = {\n        fontSize: IconFontSizes.medium // 16px\n      }, _e)\n    },\n    splitButtonFlexContainer: [getFocusStyle(theme), {\n      display: 'flex',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'flex-start'\n    }]\n  };\n  return concatStyleSets(menuItemStyles);\n});","map":{"version":3,"mappings":"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","names":["concatStyleSets","getFocusStyle","HighContrastSelector","getScreenSelector","ScreenWidthMaxMedium","IconFontSizes","getHighContrastNoAdjustStyle","memoizeFunction","CONTEXTUAL_MENU_ITEM_HEIGHT","MediumScreenSelector","getMenuItemStyles","theme","fonts","palette","ContextualMenuItemBackgroundHoverColor","semanticColors","menuItemBackgroundHovered","ContextualMenuItemTextHoverColor","menuItemTextHovered","ContextualMenuItemBackgroundSelectedColor","menuItemBackgroundPressed","ContextualMenuItemDividerColor","bodyDivider","menuItemStyles","item","medium","color","bodyText","position","boxSizing","divider","display","height","backgroundColor","root","border","width","lineHeight","cursor","padding","textAlign","rootDisabled","disabledBodyText","pointerEvents","selectors","_a","opacity","rootHovered","themeDarkAlt","neutralPrimary","rootFocused","white","rootChecked","rootPressed","themeDark","rootExpanded","bodyTextChecked","_c","_b","linkContent","whiteSpace","alignItems","maxWidth","anchorLink","textRendering","letterSpacing","wordSpacing","textTransform","textIndent","textShadow","textDecoration","label","margin","verticalAlign","flexGrow","textOverflow","secondaryText","neutralSecondary","paddingLeft","icon","minHeight","maxHeight","fontSize","flexShrink","_d","large","iconColor","menuIcon","iconDisabled","checkmarkIcon","bodySubtext","subMenuIcon","small","_e","splitButtonFlexContainer","flexWrap","justifyContent"],"sources":["C:\\Users\\hpryz\\Documents\\_Programming\\web-project\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\ContextualMenu\\ContextualMenu.cnstyles.ts"],"sourcesContent":["import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IMenuItemStyles } from './ContextualMenu.types';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts, palette } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box',\n        },\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative',\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left',\n        },\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            // ensure disabled text looks different than enabled\n            color: 'GrayText',\n            opacity: 1,\n          },\n        },\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        color: ContextualMenuItemTextHoverColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDarkAlt,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootFocused: {\n        backgroundColor: palette.white,\n      },\n      rootChecked: {\n        selectors: {\n          '.ms-ContextualMenu-checkmarkIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDark,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        selectors: {\n          '.ms-ContextualMenu-submenuIcon': {\n            [HighContrastSelector]: {\n              // icons inside of anchor tags are not properly inheriting color in high contrast\n              color: 'inherit',\n            },\n          },\n          [HighContrastSelector]: {\n            // allow change in background/text to be visible\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%',\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box',\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right',\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        fontSize: IconFontSizes.medium,\n        width: IconFontSizes.medium,\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.large,\n            width: IconFontSizes.large,\n          },\n        },\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText,\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        color: palette.neutralSecondary,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: IconFontSizes.small, // 12px\n        selectors: {\n          ':hover': {\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.neutralPrimary,\n          },\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.medium, // 16px\n          },\n        },\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n      ],\n    };\n\n    return concatStyleSets(menuItemStyles);\n  },\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}