{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { getGlobalClassNames, mergeStyleSets } from '../../Styling';\nexport var ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer'\n};\nexport var getBaseButtonClassNames = memoizeFunction(function (theme, styles, className, variantClassName, iconClassName, menuIconClassName, disabled, hasMenu, checked, expanded, isSplit) {\n  var _a, _b;\n  var classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n  var isExpanded = expanded && !isSplit;\n  return mergeStyleSets({\n    root: [classNames.msButton, styles.root, variantClassName, checked && ['is-checked', styles.rootChecked], isExpanded && ['is-expanded', styles.rootExpanded, {\n      selectors: (_a = {}, _a[\":hover .\" + classNames.msButtonIcon] = styles.iconExpandedHovered,\n      // menuIcon falls back to rootExpandedHovered to support original behavior\n      _a[\":hover .\" + classNames.msButtonMenuIcon] = styles.menuIconExpandedHovered || styles.rootExpandedHovered, _a[':hover'] = styles.rootExpandedHovered, _a)\n    }], hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu], disabled && ['is-disabled', styles.rootDisabled], !disabled && !isExpanded && !checked && {\n      selectors: (_b = {\n        ':hover': styles.rootHovered\n      }, _b[\":hover .\" + classNames.msButtonLabel] = styles.labelHovered, _b[\":hover .\" + classNames.msButtonIcon] = styles.iconHovered, _b[\":hover .\" + classNames.msButtonDescription] = styles.descriptionHovered, _b[\":hover .\" + classNames.msButtonMenuIcon] = styles.menuIconHovered, _b[':focus'] = styles.rootFocused, _b[':active'] = styles.rootPressed, _b[\":active .\" + classNames.msButtonIcon] = styles.iconPressed, _b[\":active .\" + classNames.msButtonDescription] = styles.descriptionPressed, _b[\":active .\" + classNames.msButtonMenuIcon] = styles.menuIconPressed, _b)\n    }, disabled && checked && [styles.rootCheckedDisabled], !disabled && checked && {\n      selectors: {\n        ':hover': styles.rootCheckedHovered,\n        ':active': styles.rootCheckedPressed\n      }\n    }, className],\n    flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n    textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n    icon: [classNames.msButtonIcon, iconClassName, styles.icon, isExpanded && styles.iconExpanded, checked && styles.iconChecked, disabled && styles.iconDisabled],\n    label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n    menuIcon: [classNames.msButtonMenuIcon, menuIconClassName, styles.menuIcon, checked && styles.menuIconChecked, disabled && !isSplit && styles.menuIconDisabled, !disabled && !isExpanded && !checked && {\n      selectors: {\n        ':hover': styles.menuIconHovered,\n        ':active': styles.menuIconPressed\n      }\n    }, isExpanded && ['is-expanded', styles.menuIconExpanded]],\n    description: [classNames.msButtonDescription, styles.description, checked && styles.descriptionChecked, disabled && styles.descriptionDisabled],\n    screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText]\n  });\n});","map":{"version":3,"mappings":"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","names":["memoizeFunction","getGlobalClassNames","mergeStyleSets","ButtonGlobalClassNames","msButton","msButtonHasMenu","msButtonIcon","msButtonMenuIcon","msButtonLabel","msButtonDescription","msButtonScreenReaderText","msButtonFlexContainer","msButtonTextContainer","getBaseButtonClassNames","theme","styles","className","variantClassName","iconClassName","menuIconClassName","disabled","hasMenu","checked","expanded","isSplit","classNames","isExpanded","root","rootChecked","rootExpanded","selectors","_a","iconExpandedHovered","menuIconExpandedHovered","rootExpandedHovered","rootHasMenu","rootDisabled","rootHovered","_b","labelHovered","iconHovered","descriptionHovered","menuIconHovered","rootFocused","rootPressed","iconPressed","descriptionPressed","menuIconPressed","rootCheckedDisabled","rootCheckedHovered","rootCheckedPressed","flexContainer","textContainer","icon","iconExpanded","iconChecked","iconDisabled","label","labelChecked","labelDisabled","menuIcon","menuIconChecked","menuIconDisabled","menuIconExpanded","description","descriptionChecked","descriptionDisabled","screenReaderText"],"sources":["C:\\Users\\hpryz\\Documents\\_Programming\\web-project\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Button\\BaseButton.classNames.ts"],"sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { getGlobalClassNames, mergeStyleSets } from '../../Styling';\nimport type { ITheme } from '../../Styling';\nimport type { IButtonStyles } from './Button.types';\n\nexport interface IButtonClassNames {\n  root?: string;\n  flexContainer?: string;\n  textContainer?: string;\n  icon?: string;\n  label?: string;\n  menuIcon?: string;\n  description?: string;\n  screenReaderText?: string;\n}\n\nexport const ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer',\n};\n\nexport const getBaseButtonClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    styles: IButtonStyles,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    hasMenu: boolean,\n    checked: boolean,\n    expanded: boolean,\n    isSplit: boolean | undefined,\n  ): IButtonClassNames => {\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n\n    const isExpanded = expanded && !isSplit;\n    return mergeStyleSets({\n      root: [\n        classNames.msButton,\n        styles.root,\n        variantClassName,\n        checked && ['is-checked', styles.rootChecked],\n        isExpanded && [\n          'is-expanded',\n          styles.rootExpanded,\n          {\n            selectors: {\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\n              // menuIcon falls back to rootExpandedHovered to support original behavior\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n              ':hover': styles.rootExpandedHovered,\n            },\n          },\n        ],\n        hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.rootHovered,\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\n              ':focus': styles.rootFocused,\n              ':active': styles.rootPressed,\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed,\n            },\n          },\n        disabled && checked && [styles.rootCheckedDisabled],\n        !disabled &&\n          checked && {\n            selectors: {\n              ':hover': styles.rootCheckedHovered,\n              ':active': styles.rootCheckedPressed,\n            },\n          },\n        className,\n      ],\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n      icon: [\n        classNames.msButtonIcon,\n        iconClassName,\n        styles.icon,\n        isExpanded && styles.iconExpanded,\n        checked && styles.iconChecked,\n        disabled && styles.iconDisabled,\n      ],\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n      menuIcon: [\n        classNames.msButtonMenuIcon,\n        menuIconClassName,\n        styles.menuIcon,\n        checked && styles.menuIconChecked,\n        disabled && !isSplit && styles.menuIconDisabled,\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.menuIconHovered,\n              ':active': styles.menuIconPressed,\n            },\n          },\n        isExpanded && ['is-expanded', styles.menuIconExpanded],\n      ],\n      description: [\n        classNames.msButtonDescription,\n        styles.description,\n        checked && styles.descriptionChecked,\n        disabled && styles.descriptionDisabled,\n      ],\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText],\n    });\n  },\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}