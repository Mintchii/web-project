{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nvar defaultIconRenderer = function (props) {\n  var item = props.item,\n    classNames = props.classNames;\n  var iconProps = item.iconProps;\n  return React.createElement(Icon, __assign({}, iconProps, {\n    className: classNames.icon\n  }));\n};\nvar renderItemIcon = function (props) {\n  var item = props.item,\n    hasIcons = props.hasIcons;\n  if (!hasIcons) {\n    return null;\n  }\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n  return defaultIconRenderer(props);\n};\nvar renderCheckMarkIcon = function (_a) {\n  var onCheckmarkClick = _a.onCheckmarkClick,\n    item = _a.item,\n    classNames = _a.classNames;\n  var isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    var onClick = function (e) {\n      return onCheckmarkClick(item, e);\n    };\n    return React.createElement(Icon, {\n      iconName: item.canCheck !== false && isItemChecked ? 'CheckMark' : '',\n      className: classNames.checkmarkIcon,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: onClick\n    });\n  }\n  return null;\n};\nvar renderItemName = function (_a) {\n  var item = _a.item,\n    classNames = _a.classNames;\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return React.createElement(\"span\", {\n      className: classNames.label\n    }, item.text || item.name);\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\nvar renderSecondaryText = function (_a) {\n  var item = _a.item,\n    classNames = _a.classNames;\n  if (item.secondaryText) {\n    return React.createElement(\"span\", {\n      className: classNames.secondaryText\n    }, item.secondaryText);\n  }\n  return null;\n};\nvar renderSubMenuIcon = function (_a) {\n  var item = _a.item,\n    classNames = _a.classNames,\n    theme = _a.theme;\n  if (hasSubmenu(item)) {\n    return React.createElement(Icon, __assign({\n      iconName: getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'\n    }, item.submenuIconProps, {\n      className: classNames.subMenuIcon\n    }));\n  }\n  return null;\n};\nvar ContextualMenuItemBase = /** @class */function (_super) {\n  __extends(ContextualMenuItemBase, _super);\n  function ContextualMenuItemBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.openSubMenu = function () {\n      var _a = _this.props,\n        item = _a.item,\n        openSubMenu = _a.openSubMenu,\n        getSubmenuTarget = _a.getSubmenuTarget;\n      if (getSubmenuTarget) {\n        var submenuTarget = getSubmenuTarget();\n        if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n          openSubMenu(item, submenuTarget);\n        }\n      }\n    };\n    _this.dismissSubMenu = function () {\n      var _a = _this.props,\n        item = _a.item,\n        dismissSubMenu = _a.dismissSubMenu;\n      if (hasSubmenu(item) && dismissSubMenu) {\n        dismissSubMenu();\n      }\n    };\n    _this.dismissMenu = function (dismissAll) {\n      var dismissMenu = _this.props.dismissMenu;\n      if (dismissMenu) {\n        dismissMenu(undefined /* ev */, dismissAll);\n      }\n    };\n    initializeComponentRef(_this);\n    return _this;\n  }\n  ContextualMenuItemBase.prototype.render = function () {\n    var _a = this.props,\n      item = _a.item,\n      classNames = _a.classNames;\n    var renderContent = item.onRenderContent || this._renderLayout;\n    return React.createElement(\"div\", {\n      className: item.split ? classNames.linkContentMenu : classNames.linkContent\n    }, renderContent(this.props, {\n      renderCheckMarkIcon: renderCheckMarkIcon,\n      renderItemIcon: renderItemIcon,\n      renderItemName: renderItemName,\n      renderSecondaryText: renderSecondaryText,\n      renderSubMenuIcon: renderSubMenuIcon\n    }));\n  };\n  ContextualMenuItemBase.prototype._renderLayout = function (props, defaultRenders) {\n    return React.createElement(React.Fragment, null, defaultRenders.renderCheckMarkIcon(props), defaultRenders.renderItemIcon(props), defaultRenders.renderItemName(props), defaultRenders.renderSecondaryText(props), defaultRenders.renderSubMenuIcon(props));\n  };\n  return ContextualMenuItemBase;\n}(React.Component);\nexport { ContextualMenuItemBase };","map":{"version":3,"mappings":"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","names":["React","hasSubmenu","getIsChecked","getRTL","initializeComponentRef","Icon","defaultIconRenderer","props","classNames","item","iconProps","className","icon","renderItemIcon","hasIcons","onRenderIcon","renderCheckMarkIcon","_a","onCheckmarkClick","isItemChecked","onClick","e","iconName","canCheck","checkmarkIcon","renderItemName","text","name","label","renderSecondaryText","secondaryText","renderSubMenuIcon","theme","submenuIconProps","subMenuIcon","__extends","_super","_this","openSubMenu","getSubmenuTarget","submenuTarget","dismissSubMenu","dismissAll","dismissMenu","undefined","ContextualMenuItemBase","renderContent","onRenderContent","_renderLayout","split","linkContentMenu","linkContent","defaultRenders","Component"],"sources":["C:\\Users\\hpryz\\Documents\\_Programming\\web-project\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\ContextualMenu\\ContextualMenuItem.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport type { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst defaultIconRenderer = (props: IContextualMenuItemProps) => {\n  const { item, classNames } = props;\n  const { iconProps } = item;\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons } = props;\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}