{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nvar Button = /** @class */function (_super) {\n  __extends(Button, _super);\n  function Button(props) {\n    var _this = _super.call(this, props) || this;\n    warn(\"The Button component has been deprecated. Use specific variants instead. \" + \"(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)\");\n    return _this;\n  }\n  Button.prototype.render = function () {\n    var props = this.props;\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return React.createElement(ActionButton, __assign({}, props));\n      case ButtonType.compound:\n        return React.createElement(CompoundButton, __assign({}, props));\n      case ButtonType.icon:\n        return React.createElement(IconButton, __assign({}, props));\n      case ButtonType.primary:\n        return React.createElement(PrimaryButton, __assign({}, props));\n      default:\n        return React.createElement(DefaultButton, __assign({}, props));\n    }\n  };\n  return Button;\n}(React.Component);\nexport { Button };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,aAAa,QAAQ,+BAA+B;AAG7D;;;;;AAKA;EAA4BC;EAC1B,gBAAYC,KAAmB;IAA/B,YACEC,kBAAMD,KAAK,CAAC;IAEZR,IAAI,CACF,2EAA2E,GACzE,gEAAgE,CACnE;;EACH;EAEOU,uBAAM,GAAb;IACE,IAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB;IACA,QAAQA,KAAK,CAACG,UAAU;MACtB,KAAKV,UAAU,CAACW,OAAO;QACrB,OAAOb,oBAACI,YAAY,eAAKK,KAAK,EAAI;MAEpC,KAAKP,UAAU,CAACY,QAAQ;QACtB,OAAOd,oBAACK,cAAc,eAAKI,KAAK,EAAI;MAEtC,KAAKP,UAAU,CAACa,IAAI;QAClB,OAAOf,oBAACM,UAAU,eAAKG,KAAK,EAAI;MAElC,KAAKP,UAAU,CAACc,OAAO;QACrB,OAAOhB,oBAACO,aAAa,eAAKE,KAAK,EAAI;MAErC;QACE,OAAOT,oBAACG,aAAa,eAAKM,KAAK,EAAI;IAAC;EAE1C,CAAC;EACH,aAAC;AAAD,CAAC,CA/B2BT,KAAK,CAACiB,SAAS","names":["React","warn","ButtonType","DefaultButton","ActionButton","CompoundButton","IconButton","PrimaryButton","__extends","props","_super","Button","buttonType","command","compound","icon","primary","Component"],"sources":["C:\\Users\\hpryz\\Documents\\_Programming\\web-project\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\Button\\Button.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\nimport type { IButtonProps } from './Button.types';\n\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends React.Component<IButtonProps, {}> {\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`,\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}